<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>管理 on WellWells</title>
        <link>https://wellstsai.com/tags/%E7%AE%A1%E7%90%86/</link>
        <description>Recent content in 管理 on WellWells</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>zh-tw</language>
        <lastBuildDate>Tue, 23 Jan 2024 16:20:00 +0800</lastBuildDate><atom:link href="https://wellstsai.com/tags/%E7%AE%A1%E7%90%86/index.xml" rel="self" type="application/rss+xml" /><item>
        <title>糟糕的 Scrum 管理</title>
        <link>https://wellstsai.com/post/bad-scrum/</link>
        <pubDate>Tue, 23 Jan 2024 16:20:00 +0800</pubDate>
        
        <guid>https://wellstsai.com/post/bad-scrum/</guid>
        <description>&lt;img src="https://wellstsai.com/post/bad-scrum/cover.jpg" alt="Featured image of post 糟糕的 Scrum 管理" /&gt;&lt;h2 id=&#34;引言&#34;&gt;引言&lt;/h2&gt;
&lt;p&gt;以下內容是基於公司目前使用 Scrum 管理所產生的心得。&lt;/p&gt;
&lt;p&gt;皆為個人主觀感受、抱怨與現實。&lt;/p&gt;
&lt;p&gt;並且沒有問題解決方案，就單純粹發牢騷。&lt;/p&gt;
&lt;p&gt;如果有錯誤、不認同也歡迎在下方討論。&lt;/p&gt;
&lt;p&gt;在網路上以敏捷為關鍵字搜尋，會發現充斥著&lt;code&gt;必看&lt;/code&gt;、&lt;code&gt;必學&lt;/code&gt;、&lt;code&gt;強大&lt;/code&gt;、&lt;code&gt;簡單&lt;/code&gt;、&lt;code&gt;靈活&lt;/code&gt;、&lt;code&gt;真敏捷&lt;/code&gt;等話術。或是&lt;code&gt;XXX 公司都在使用的管理方法&lt;/code&gt;等術語吸引學習。&lt;/p&gt;
&lt;p&gt;身為主管的你，怎麼能不學？&lt;/p&gt;
&lt;p&gt;但事實成效不一定比較好，你目前團隊執行的是真正敏捷還是表面上的敏捷？&lt;/p&gt;
&lt;h2 id=&#34;什麼是-scrum&#34;&gt;什麼是 Scrum?&lt;/h2&gt;
&lt;p&gt;Scrum 是一個敏捷項目管理系統，它「協助人們和團隊以合作的方式逐步提供價值。」&lt;/p&gt;
&lt;p&gt;在 Scrum 管理所構成的團隊合作做模式下，最重要的團隊彼此間的信任（Trust）。&lt;/p&gt;
&lt;p&gt;一旦沒有信任，Scrum 大師所闡述一大堆什麼&lt;code&gt;自主性&lt;/code&gt;、&lt;code&gt;高績效&lt;/code&gt;都是屁。因為團隊成員的執行都是被動且低效的。&lt;/p&gt;
&lt;p&gt;Scrum 往往牽扯到公司的認知、團隊間的行為、態度與價值觀的問題。而不是找個顧問來，在管理軟體上弄弄看板、清單、執行每日的站立會議就當成是在 Scrum。&lt;/p&gt;
&lt;p&gt;沒有能力點破當前團隊問題的人，往往執行的都是偽敏捷（fake agile）。&lt;/p&gt;
&lt;h2 id=&#34;角色定義&#34;&gt;角色定義&lt;/h2&gt;
&lt;h3 id=&#34;敏捷中的角色定義&#34;&gt;敏捷中的角色定義&lt;/h3&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Scrum Master（SM）: 為 Scrum 的主持人，確保 Scrum 流程的順利進行，並促進團隊的自我組織和不斷改進。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Product Owner（PO）: 又為產品負責人，PO 的主要目標是確保開發團隊優先處理最有價值的工作，以滿足產品的需求和願景。為利害關係人與開發人員之間的橋樑。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;Developers: 開發人員的主要目標是通過合作和創新，交付高品質的軟體。在 Scrum 框架中，開發人員被鼓勵自我組織，共同決策並確保團隊進展。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;公司的角色定義&#34;&gt;公司的角色定義&lt;/h3&gt;
&lt;p&gt;根據目前身處的團隊內所看到的角色定義。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;Stakeholders: 利害關係人，通常會希望獲得產品資訊，或是參與其中。可能是最終用戶、其他團隊、上級領導，或是是另一家企業。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;領導-A：整個技術部的領導者，管理多個團隊。需要面對整個公司部門的其他領導，並回報給董事長。對於產品技術不懂。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;主管-B：團隊內的領導者，與團隊內的成員有密切接觸。目前擔任 PO 並與團隊成員有密切接觸，每兩週回報給領導-A。技術不熟悉但積極學習。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;冗員-C：就是個冗員。&lt;/p&gt;
&lt;p&gt;冗員的定義是對團隊沒什麼貢獻或是負生產，但又身為團隊一員的人。其中可能有以下特質：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;講得出很多技術，但都不會做。&lt;/li&gt;
&lt;li&gt;著重在耍嘴皮子，常常與事實認知有錯誤。&lt;/li&gt;
&lt;li&gt;什麼事情都要管，最終自己份內的事情沒有完成。&lt;/li&gt;
&lt;li&gt;團隊內的負情緒製造者。&lt;/li&gt;
&lt;li&gt;執行不符合自己職位的事情。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;成員-D：團隊內的成員，有實戰經驗好的與差的。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;實戰經驗好的，往往能在時間內完成或超出預期的工作內容。其結果往往會被稱讚。&lt;/li&gt;
&lt;li&gt;實戰經驗差的，做出來的東西被評估不足，需要額外訓練或有人合作進行。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;現實職場&#34;&gt;現實職場&lt;/h2&gt;
&lt;p&gt;在現實職場中，尤其是在傳統產業或大型團隊中，常常面臨著各種人的問題因素，這些因素可能導致開發進度延遲、資源浪費所造成低效率。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;技術負債：為了趕上進度或滿足某些要求，而採取先求有再求好的策略，最終導致技術負債累積。&lt;/li&gt;
&lt;li&gt;重複工作：由於技術負債導致重新開發架構或軟體。&lt;/li&gt;
&lt;li&gt;不平等待遇：你認真做事情，卻可能比資深不做事的錢少。&lt;/li&gt;
&lt;li&gt;能力不足：由於缺乏關鍵的技能或知識，無法有效地完成分配的任務。&lt;/li&gt;
&lt;li&gt;領導力不足：明明某成員執行方向偏離了，領導者未能判斷與指正，導致該成員自由發展，浪費時間。&lt;/li&gt;
&lt;li&gt;缺乏溝通：團隊內部溝通不良，導致訊息傳遞不清晰，任務執行出現偏差。&lt;/li&gt;
&lt;li&gt;倚老賣老：過於依賴過去的經驗，而不願意接受新的觀點或方法。&lt;/li&gt;
&lt;li&gt;多一事不如少一事：害怕承擔風險或額外的負擔，而只選擇較簡單的工作執行。&lt;/li&gt;
&lt;li&gt;混吃等死：僅僅為了生存而工作，在工作缺乏熱情和動力。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;可能還有更多，也歡迎補充遺漏的。&lt;/p&gt;
&lt;p&gt;這些問題只是凸顯現實職場中的情境，並不是要評斷或批評像是倚老賣老或是混吃等死這樣的行為。&lt;/p&gt;
&lt;p&gt;在某些公職體系中，工作可能需要循序漸進，遵循前人的方法執行。這種方式可以確保穩定性和可靠性。&lt;/p&gt;
&lt;p&gt;然而，在私人企業體系中，這些行為會導致 Scrum 的失敗。敏捷開發強調快速反饋、靈活適應和團隊合作，因此需要成員具備主動精神。&lt;/p&gt;
&lt;p&gt;最終的執行結果受到團隊中人文、認知等種種因素的影響，這些因素會導致最終執行結果成效不彰。&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;✨ 案例 1:&lt;/p&gt;
&lt;p&gt;公司準備設計某產品，外包給 A 廠商製作，他們有能力分析與完成工作內容，並給予回饋。&lt;/p&gt;
&lt;p&gt;然而公司指派給一個沒有能力的冗員負責監督（亦或是冗員搶著說要負責）。&lt;/p&gt;
&lt;p&gt;PO 無法判斷此工作是否適合該冗員。而冗員搶了 A 廠商該做的事情，並表現出這個工作需要他才可以進行。&lt;/p&gt;
&lt;p&gt;最終變任由該冗員自由發展、自由設計。最終，長久下來的合作沒有任何產品產出。&lt;/p&gt;
&lt;p&gt;實際上，該工作若由 A 廠商執行，他們能夠做完全執行、分析，並且，並進行全自動分析會更快（例如參數化設計變數，並執行最佳化分析）。&lt;/p&gt;
&lt;p&gt;PS. 產品為一代名詞。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;blockquote&gt;
&lt;p&gt;✨ 案例 2:&lt;/p&gt;
&lt;p&gt;公司員工 A 曾獨立開發一款軟體，並獲得好評。&lt;/p&gt;
&lt;p&gt;然而該同事已離職。雖然有留下原始碼，但因為技術負債而導致沒有人能夠接他的程式碼。&lt;/p&gt;
&lt;p&gt;進而指派員工 B 使用全新的軟體架構來實現一樣的軟體。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;以上兩個案例（或更多），只是凸顯出傳統團隊內的&lt;code&gt;能力不足&lt;/code&gt;、&lt;code&gt;技術負債&lt;/code&gt;與&lt;code&gt;重複工作&lt;/code&gt;問題。&lt;/p&gt;
&lt;p&gt;實際上的問題，如果更深層來看可能是&lt;code&gt;缺乏溝通&lt;/code&gt;、&lt;code&gt;多一事不如少一事&lt;/code&gt;或是&lt;code&gt;領導力不足&lt;/code&gt;甚至是&lt;code&gt;不平等待遇&lt;/code&gt;所導致。&lt;/p&gt;
&lt;h2 id=&#34;有產出的團隊需要什麼&#34;&gt;有產出的團隊需要什麼？&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;專業的人&lt;/p&gt;
&lt;p&gt;在一個團隊中，確保對的團隊成員在擅長領域發揮所長，避免浪費資源。&lt;/p&gt;
&lt;p&gt;還包含像是團隊內要有&lt;code&gt;優秀的領導人&lt;/code&gt;，與&lt;code&gt;對應知識的團隊成員&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;沒有專業的人在團隊內只會凸顯團隊的無能與無貢獻。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;信任&lt;/p&gt;
&lt;p&gt;主管講得天花亂墜，最終又因為許多事情而改變方向。造成成員內部互相矛盾而信任破裂。執行力也會大幅下降。&lt;/p&gt;
&lt;p&gt;亦或是本身團隊內部成員已經有疙瘩了，不信任的情況下只會越來越多衝突。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;足夠的薪水報酬&lt;/p&gt;
&lt;p&gt;基於信任，相信薪水應該在某個水平。&lt;/p&gt;
&lt;p&gt;一旦被得知薪酬給得不夠，信任也不用談了。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;愛（❤️）&lt;/p&gt;
&lt;p&gt;有了信任、錢給夠了，愛自然就產生了。&lt;/p&gt;
&lt;p&gt;愛你自己的工作、在工作上獲得成就感，自然而然貢獻整個團隊，整個團隊有了更多資源，向心力也進而提升。&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;blockquote&gt;
&lt;p&gt;✨ 案例:&lt;/p&gt;
&lt;p&gt;曾接觸到的公司制度自由，但缺少了 1, 2, 3。隨著時間的推移，對於工作的愛也就消逝了。&lt;/p&gt;
&lt;p&gt;對於公司主管他們是站在資方面的，秉持著多一事不如少一事的態度，問題沒辦法從根本解決。&lt;/p&gt;
&lt;p&gt;在不願意改善專業人才、信任與薪酬的情況下，Scrum 很難如預期正常運行。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h2 id=&#34;目前執行的-scrum&#34;&gt;目前執行的 Scrum&lt;/h2&gt;
&lt;p&gt;考慮到信任的不足，重新審視團隊在執行 Scrum 過程中，發現其中許多情境實在令人感到幽默。&lt;/p&gt;
&lt;h3 id=&#34;story-point&#34;&gt;Story Point&lt;/h3&gt;
&lt;p&gt;是用來衡量每一項任務的複雜程度，但最終常被成員來評估時間。&lt;/p&gt;
&lt;p&gt;變相的是大家都盡可能的塞滿許多子任務藉此填高分數，塑造自己很忙、貢獻很多。&lt;/p&gt;
&lt;p&gt;最終專注在個人任務而非交付功能。&lt;/p&gt;
&lt;p&gt;此外，Story Point 會給人一種分數就是 KPI 的指標。或是讓人感覺做了很多重要的事情。&lt;/p&gt;
&lt;p&gt;有人將工作拆成很多細小工作，然後給予最低的一分，但有人不是。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;重複工作拆細，並給 1 分，最後分數 20 分。&lt;/li&gt;
&lt;li&gt;工作沒有拆細，但工作很難，給予的分數又不夠高，最後 9 分。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;且一開始在規劃時，曾執行過 Scrum 的&lt;code&gt;大濕&lt;/code&gt;又說不能高於 13 分等限制。&lt;/p&gt;
&lt;p&gt;由於工作拆細而分數變高，但有人又限制自己的認知分數，最終結果給人一大堆認知上的錯覺與障礙。&lt;/p&gt;
&lt;p&gt;Story Point 其實還有許多可以值得討論的，但局限於系統有些參數沒有被評估到。例如：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;速度：Story Point / Number of days&lt;/li&gt;
&lt;li&gt;任務執行速度：Tasks / Number of days&lt;/li&gt;
&lt;li&gt;任務負載：Tasks / Story Point&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&#34;daily-stand-up-會議與-sprints&#34;&gt;Daily stand-up 會議與 Sprints&lt;/h3&gt;
&lt;p&gt;透過快速、短暫的時間內彼此交代昨天做了什麼、今天要做什麼，以及是否遇到任何問題，可以讓大家互相了解情況。&lt;/p&gt;
&lt;p&gt;Scrum 大濕說：自己任務完成可以去看板上找任務來做的。&lt;/p&gt;
&lt;p&gt;我想通常在一個團隊中，有愛才能夠持續下去吧？&lt;/p&gt;
&lt;p&gt;畢竟，即使能夠快速完成任務，如果對團隊沒有信任了，執行的內容也會更偏向個人事務而非公司事務。&lt;/p&gt;
&lt;h3 id=&#34;sprint-review&#34;&gt;Sprint Review&lt;/h3&gt;
&lt;p&gt;在第一次的會議中，對於Sprint Review的部分並沒有太多共鳴。&lt;/p&gt;
&lt;p&gt;團隊中會有冗員會讓自己看起來很忙。花了半小時講一堆不是他做的東西，但是卻又凸顯自己的貢獻程度。&lt;/p&gt;
&lt;p&gt;討論到最後，我們花了大量時間在會議上討論細節。&lt;/p&gt;
&lt;p&gt;例如：如何壓接頭、如何確認和探討等技術細節。&lt;/p&gt;
&lt;p&gt;結果，第一次的成果展示變得冗長且無趣。&lt;/p&gt;
&lt;h3 id=&#34;質問對方&#34;&gt;質問對方&lt;/h3&gt;
&lt;p&gt;某個冗員 C 跟成員 D 可能感情還不錯。&lt;/p&gt;
&lt;p&gt;成員 D 說明內容時，C 提出了以下觀點：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;有做這個工作嗎？&lt;/li&gt;
&lt;li&gt;問一個很專業的問題____&lt;/li&gt;
&lt;li&gt;也不知道你這樣對不對&lt;/li&gt;
&lt;li&gt;應該有什麼其他方式來____&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;冗員 C 平常常常說些無意義的話，但實際上他也不知道該怎麼做。&lt;/p&gt;
&lt;p&gt;最後，他只是為了表現自己而發表一些言辭，這讓人感到心累。&lt;/p&gt;
&lt;h3 id=&#34;不斷更換軟體&#34;&gt;不斷更換軟體&lt;/h3&gt;
&lt;p&gt;從一開始的 Jira、Trello 如今到 Asana。&lt;/p&gt;
&lt;p&gt;在上傳資料時，總是擔心資料外洩的問題。&lt;/p&gt;
&lt;p&gt;然而，並且沒有邀請專業人員（例如 MIS）參與會議，以評估是否適合自行架設服務（self-hosting）。&lt;/p&gt;
&lt;p&gt;實際上，這一切都歸結於公司是否願意投資於這種專案管理工具軟體。&lt;/p&gt;
&lt;p&gt;我想，等 Asana 的試用版過期後，過一段時間可能又會考慮更換其他軟體。&lt;/p&gt;
&lt;h2 id=&#34;結論&#34;&gt;結論&lt;/h2&gt;
&lt;p&gt;其實不管在哪個公司或團隊中，這些人、問題永遠都會存在著。&lt;/p&gt;
&lt;p&gt;唯一能做的就是調整自己的心態，學會看開，並適應這種情況，甚至考慮轉換方向。&lt;/p&gt;
&lt;p&gt;對於主管來說，有些事情是無法處理的。他們可能選擇消極的態度，或者過度友善地默許冗員的存在。&lt;/p&gt;
&lt;p&gt;而在更高層的領導者眼中，則是被底下的 PO 矇著。還產不出實際產品與可能，陪著瞎忙繼續吃老本做代工。&lt;/p&gt;
&lt;p&gt;而對於敏捷執行後的結論往往都是：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;敏捷不會改變現況，只有團隊真正想要改變才能實現進步。&lt;/li&gt;
&lt;li&gt;敏捷運作到最後都不敏捷。&lt;/li&gt;
&lt;li&gt;敏捷只記得每天的站立會議。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;試著想想&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;用看板等於敏捷？&lt;/li&gt;
&lt;li&gt;每天站立會議等於敏捷？&lt;/li&gt;
&lt;li&gt;有請顧問來講課就是敏捷？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;許多潛在因素像是：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;團隊之間是否彼此信任？&lt;/li&gt;
&lt;li&gt;SM 有沒有辦法得知開發團隊達成目標的潛在障礙？&lt;/li&gt;
&lt;li&gt;PO 有沒有辦法得知 Stakeholders 的需求？&lt;/li&gt;
&lt;li&gt;團隊成員的專業技能是否能夠獨立完成份內工作？&lt;/li&gt;
&lt;li&gt;團隊成員是否具有高度的自主性？&lt;/li&gt;
&lt;li&gt;Sprint Review 是否為有效會議？&lt;/li&gt;
&lt;li&gt;Daily stand-up 是否每天執行與是否為流水帳？&lt;/li&gt;
&lt;li&gt;Sprint 事項是否為了完成而隨便執行？&lt;/li&gt;
&lt;li&gt;公司的組織文化是否支持敏捷開發方法？&lt;/li&gt;
&lt;li&gt;SM 有沒有因公司組織文化提供客製化敏捷？&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;也因為團隊內部太多人擅於找一堆理由來掩飾組織、團隊、個人的問題。&lt;/p&gt;
&lt;p&gt;自主性不高的團隊成員，套用了敏捷也始終不會敏捷。&lt;/p&gt;
&lt;p&gt;反倒是公司主管或領導可以問問自己：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;公司養了多少冗員？&lt;/li&gt;
&lt;li&gt;哪些員工是真正有付出價值與產出的？&lt;/li&gt;
&lt;li&gt;冗員你要如何讓他做事？不干擾其他人？&lt;/li&gt;
&lt;li&gt;沒有能力或能力較差的成員該如何安排？&lt;/li&gt;
&lt;li&gt;公司沒人力，是否主動且積極尋找新員工？&lt;/li&gt;
&lt;li&gt;真正遇到不合適的員工是資遣他還是安排更適合的位置？&lt;/li&gt;
&lt;li&gt;有付出的員工，薪資是否對得起那些不做事的？&lt;/li&gt;
&lt;li&gt;員工內部自我訓練與 SOP 有被建立起來嗎？&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;不過對於這些高層領導，公司又不是他們的。&lt;/p&gt;
&lt;p&gt;誰又願意沒事找事做進行人事改革呢？&lt;/p&gt;
&lt;p&gt;頂多把那些冗員的考績打差罷了。問題有因此而解決嗎？&lt;/p&gt;
&lt;h2 id=&#34;參考資料&#34;&gt;參考資料&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://scrumguides.org/docs/scrumguide/v2020/2020-Scrum-Guide-Chinese-Traditional.pdf&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Scrum 指南&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://wangterryonagile.blogspot.com/2021/11/scrum-master.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;王泰瑞 - scrum master 的獨白&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://teddy-chen-tw.blogspot.com/2014/07/blog-post.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;搞笑談軟工 - 說實話，做實事&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://teddy-chen-tw.blogspot.com/2010/06/blog-post_20.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;搞笑談軟工 - 對症下藥&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;http://www.ezproject.tw/2020/09/Scrum-and-Agile-Health-Check.html&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;敏捷健檢：偽敏捷的三十大症狀，你的團隊或組織中了幾個？&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a class=&#34;link&#34; href=&#34;https://medium.com/@scrumcontents/scrum-does-not-work-here-in-asia-72d7bccccb4d&#34;  target=&#34;_blank&#34; rel=&#34;noopener&#34;
    &gt;Scrum does not work here in Asia&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
</description>
        </item>
        
    </channel>
</rss>
